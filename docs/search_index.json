[
["visualization-in-r-with-ggplot.html", "6 visualization in R with ggplot 6.1 picture &gt; (words, numbers)? 6.2 your ggplots 6.3 facets - displaying the Anscombe data 6.4 exploring more data 6.5 R is the bomb", " 6 visualization in R with ggplot In the last chapter, we introduced data visualization, citing vision-aries including Edward Tufte and Hans Rosling, inspired works such as Minard’s Carte Figurative and Periscopic’s stolen years, as well as a few cautionary tales of misleading and confusing graphs. Here, in playing with and learning the R package ggplot, we begin to move from consumers to creators of data visualizations. As the first visualization in Wickham and Grolemund (2016) reminds us, data visualization is at the core of exploratory data analysis: Fig 6.1: Data visualization is at the core of data analysis (Wickham and Grolemund (2016)) In the world of data science, statistical programming is about discovering and communicating truths within your data. This exploratory data analysis is the corner of science, particularly at a time in which confirmatory studies are increasingly found to be unreproducible. Most of your reading will be from Chapter 3 of Wickham and Grolemund (2016), this is intended only as a supplement. 6.1 picture &gt; (words, numbers)? The chapter begins with a quote from John Tukey about the importance of graphs. Yet there is a tendency among some statisticians and scientists to consider graphic representations of data as less valuable than statistical ones. Perhaps, if a picture is worth a thousand words, a graph can likewise tell us more than good solid numbers. Consider ‘Anscombe’s quartet’ (screenshot below, live at http://bit.ly/anscombe2019): Table 6.1: An adaptation of Anscombe’s “quartet” (Anscombe 1973b) Exercise 6_1 Consider the spreadsheet chunk presented above, which I am characterizing as data collected on a sample of ten primary school children at recess on four consecutive days. Working with your classmates, compute the mean, standard deviation, and correlation between the two measures for one day. Share your results with the class. The four pairs of variables in Anscombe (1973b) appear statistically “the same,” yet the data suggest something else. Later, we’ll try to plot these. Perhaps graphs can reveal truths that statistics can hide. 6.2 your ggplots In class, we will review and recreate the plots in section 3.2 of Wickham and Grolemund (2016) and exercises through 3.4. Savor this section, reading slowly, and playing around with the RStudio interface. For example, read about the mpg data in the ‘help’ panel, pull up the mpg data in a view window, and sort through it by clicking on various columns. Fig. 6.2: A screenshot from RStudio, showing the mpg dataset 6.3 facets - displaying the Anscombe data When we get to section 5 (facets), it may occur to you that this would be a nice way to display the Anscombe data. Fortunately, they are already, like many other datasets, stored in R. library (tidyverse) # to get a list of preloaded datasets, uncomment this line # data() data(anscombe) str(anscombe) ## &#39;data.frame&#39;: 11 obs. of 8 variables: ## $ x1: num 10 8 13 9 11 14 6 4 12 7 ... ## $ x2: num 10 8 13 9 11 14 6 4 12 7 ... ## $ x3: num 10 8 13 9 11 14 6 4 12 7 ... ## $ x4: num 8 8 8 8 8 8 8 19 8 8 ... ## $ y1: num 8.04 6.95 7.58 8.81 8.33 ... ## $ y2: num 9.14 8.14 8.74 8.77 9.26 8.1 6.13 3.1 9.13 7.26 ... ## $ y3: num 7.46 6.77 12.74 7.11 7.81 ... ## $ y4: num 6.58 5.76 7.71 8.84 8.47 7.04 5.25 12.5 5.56 7.91 ... head(anscombe) ## x1 x2 x3 x4 y1 y2 y3 y4 ## 1 10 10 10 8 8.04 9.14 7.46 6.58 ## 2 8 8 8 8 6.95 8.14 6.77 5.76 ## 3 13 13 13 8 7.58 8.74 12.74 7.71 ## 4 9 9 9 8 8.81 8.77 7.11 8.84 ## 5 11 11 11 8 8.33 9.26 7.81 8.47 ## 6 14 14 14 8 9.96 8.10 8.84 7.04 Unfortunately, the Anscombe data in R have a different structure. Here’s one way to reshape it: anscombe$kid &lt;- c(&quot;Al&quot;, &quot;Barb&quot;, &quot;Cathy&quot;, &quot;Dirk&quot;, &quot;Edwin&quot;, &quot;Flo&quot;, &quot;George&quot;, &quot;Henry&quot;, &quot;Isaiah&quot;, &quot;Jim&quot;, &quot;Ken&quot;) # make a file anscombe2 from anscombe anscombe2 &lt;- anscombe %&gt;% # make a new variable called x from x1:x4 gather(x,levelx,x1,x2,x3,x4, # don&#39;t mess with the other variables -c(y1,y2,y3,y4,kid)) # to peek at it, uncomment the next line. # head(anscombe2) anscombe2 &lt;- anscombe2 %&gt;% gather(y,levely,y1,y2,y3,y4, -c(x,levelx,kid)) %&gt;% # keep only pairs where the x and y vars are the same filter (substr(x,2,2) == substr(y,2,2)) %&gt;% # drop one of these select (-y) %&gt;% mutate(x = recode(x, x1=&quot;Mon&quot;,x2 = &quot;Tue&quot;, x3 = &quot;Wed&quot;, x4 = &quot;Thu&quot;)) head(anscombe2) ## kid x levelx levely ## 1 Al Mon 10 8.04 ## 2 Barb Mon 8 6.95 ## 3 Cathy Mon 13 7.58 ## 4 Dirk Mon 9 8.81 ## 5 Edwin Mon 11 8.33 ## 6 Flo Mon 14 9.96 str(anscombe2) ## &#39;data.frame&#39;: 44 obs. of 4 variables: ## $ kid : chr &quot;Al&quot; &quot;Barb&quot; &quot;Cathy&quot; &quot;Dirk&quot; ... ## $ x : chr &quot;Mon&quot; &quot;Mon&quot; &quot;Mon&quot; &quot;Mon&quot; ... ## $ levelx: num 10 8 13 9 11 14 6 4 12 7 ... ## $ levely: num 8.04 6.95 7.58 8.81 8.33 ... Copy this code into your console, then try applying the code in 3.5 to the Anscombe data. Keep track of your challenges…and save your work. 6.4 exploring more data Choose one of the datasets in R, pull out a few variables, and explore these. Try to make a cool graph - one that informs the viewer, and, to paraphrase Tukey, helps us see what we don’t expect. Try several different displays. Which fail? Which succeed? Be prepared to share your efforts on Wednesday. Don’t be afraid to screw up. What’s the worst that can happen? 6.5 R is the bomb This is the worst that can happen. It probably won’t, today at least, maybe not this term. But in your fiddling, exploring, and messing around, you may tax your machine or even find a bug. Saving your work, in R as in other things, is always a good idea. Fig 6.3: Yes, R is the bomb References "]
]
